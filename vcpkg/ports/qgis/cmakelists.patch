--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -387,6 +387,7 @@ if(WITH_CORE)
   message(STATUS "Found Geos: ${GEOS_VERSION} ${GEOS_DIR}")
   find_package(GDAL REQUIRED)
   message(STATUS "Found GDAL: ${GDAL_VERSION} ${GDAL_DIR}")
+  set(GDAL_LIBRARY ${GDAL_LIBRARIES})
   find_package(EXPAT REQUIRED)
   find_package(Spatialindex REQUIRED)
   find_package(LibZip REQUIRED)
@@ -409,7 +410,8 @@ if(WITH_CORE)
   find_package(ZLIB REQUIRED)       # for decompression of vector tiles in MBTiles file
   message(STATUS "Found zlib: ${ZLIB_LIBRARIES}")
 
-  find_package(EXIV2 REQUIRED)
+  find_package(exiv2 REQUIRED)
+  set(EXIV2_LIBRARY exiv2lib)
 
   # optional
   if (WITH_POSTGRESQL)
@@ -604,6 +606,10 @@ if(WITH_CORE)
   else()
     find_package(Qt5Keychain CONFIG REQUIRED)
   endif()
+  set(QTKEYCHAIN_INCLUDE_DIR ${QTKEYCHAIN_INCLUDE_DIRS}/qt6keychain)
+  set(QTKEYCHAIN_LIBRARY ${QTKEYCHAIN_LIBRARIES})
+  set(QTKEYCHAIN_FOUND ${Qt6Keychain_FOUND})  
+  
   # Master password hash and authentication encryption
   find_package(QCA REQUIRED)
   # Check for runtime dependency of qca-ossl plugin
@@ -818,6 +824,7 @@ endif()
   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
   # disable macros that offend std::numeric_limits<T>::min()/max()
   add_definitions(-DNOMINMAX)
+  add_definitions(/bigobj)
 endif()
 
 # Prevent build when Qt api deprecated before this Qt version is used:
