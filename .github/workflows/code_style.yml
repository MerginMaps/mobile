name: Code Layout

on:
  push:
    paths:
    - 'app/**'
    - 'core/**'
    - 'gallery/**'
    - 'scripts/**'
    - 'test/**'
    - 'cmake/**'
    - 'cmake_templates/**'
    - 'CMakeLists.txt'
    - '.github/workflows/code_style.yml'
    
  release:
    types:
      - published

env:
  QT_VERSION: '6.8.2' # use scripts/update_qt_version.bash to change
  CACHE_VERSION: 0
  
jobs:
  code_style_cpp:
    name: C++ code convention check
    if: ( github.repository == 'MerginMaps/mobile' ) && (!contains(github.event.head_commit.message, 'Translate '))
    runs-on: macos-latest
    steps:

      - name: Checkout input
        uses: actions/checkout@v4
        with:
          path: input

      - name: Install astyle and run the check
        run: |
          python3 -m venv ./venv
          source ./venv/bin/activate
          sudo pip3 install astyle===3.4.13
          
          ./input/scripts/format_cpp.bash

  code_style_cmake:
    name: CMake code convention check
    if: ( github.repository == 'MerginMaps/mobile' ) && (!contains(github.event.head_commit.message, 'Translate '))
    runs-on: ubuntu-latest
    steps:
      - name: Install cmake-format
        run: |
          sudo pip3 install cmakelang

      - name: Checkout input
        uses: actions/checkout@v4
        with:
          path: input

      - name: Run cmake-format check
        run: |
          ./input/scripts/format_cmake.bash

  cppcheck:
    name: Cppcheck
    if: ( github.repository == 'MerginMaps/mobile' ) && (!contains(github.event.head_commit.message, 'Translate '))
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Requirements
        run: |
          brew update
          brew install cppcheck

      - name: Run cppcheck test
        run: ./scripts/cppcheck.bash
